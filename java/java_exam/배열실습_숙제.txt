//배열 실습2-1
int[][] list1 = new int[][] {{1, 2}, {2, 3}};
int[][] list2 = new int[][] {{3, 4}, {5, 6}};
		
int[][] result = new int[][] {
	{(list1[0][0] + list2[0][0]), (list1[0][1] + list2[0][1])},
	{(list1[1][0] + list2[1][0]), (list1[1][1] + list2[1][1])}			
};
System.out.print("result = ");
System.out.print("{{" + result[0][0] + ", " + result[0][1] + "}, ");
System.out.println("{" + result[1][0] + ", " + result[1][1] + "}}");
		
==============실행 결과==============
result = {{4, 6}, {7, 9}}


//배열 실습2-2
ArrayList <Integer> list_arr = new ArrayList<>();
ArrayList <Integer> list_arr2 = new ArrayList<>();
		
list_arr.add(4);
list_arr.add(3);
list_arr.add(2);
list_arr.add(1);
		
list_arr2.add(2);
list_arr2.add(20);
list_arr2.add(10);
list_arr2.add(3);
list_arr2.add(5);
		
list_arr.sort(null);
list_arr2.sort(null);
		
list_arr.remove(0);
list_arr2.remove(0);
		
System.out.print("list_arr = ");
System.out.println(list_arr.get(0) + ", " + list_arr.get(1) + ", " + list_arr.get(2));

System.out.print("list_arr2 = ");
System.out.println(list_arr2.get(0) + ", " + list_arr2.get(1) + ", " + list_arr2.get(2) + ", " + list_arr2.get(3));
==============실행 결과==============
list_arr = 2, 3, 4
list_arr2 = 3, 5, 10, 20 



//배열 실습2-3
ArrayList <Integer> arr = new ArrayList<>();
arr.add(1);
arr.add(2);
arr.add(3);
arr.add(4);
arr.add(5);
		
ArrayList <Integer> result = new ArrayList<>();
	
for (int j = arr.size()-1; j >= 0 ; j--) {
	result.add(arr.get(j));
}
		
System.out.print("result = {");
System.out.println(result.get(0) + ", " + result.get(1) + ", " + result.get(2) + ", " + result.get(3) + ", " + result.get(4) + "}");
		
==============실행 결과==============
result = {5, 4, 3, 2, 1}


//다른 방법
int[] n = new int[] {1, 2, 3, 4, 5};
		
int[] result = new int[5];
		

for (int i = 0; i < n.length; i++) {
	result[i] = n[4-i];
}
		
		
for (int i = 0; i < result.length; i++) {
	System.out.print(result[i] + " ");
}
==============실행 결과==============
5 4 3 2 1 



//배열 실습1-2
Scanner input = new Scanner(System.in);
Random random = new Random();
		
ArrayList <Integer> numbles = new ArrayList<>();
		
System.out.println("랜덤 숫자를 생성 합니다.");
int num1 = random.nextInt(5) + 1;
int num2 = random.nextInt(5) + 1;
int num3 = random.nextInt(5) + 1;
		
numbles.add(num1);
numbles.add(num2);
numbles.add(num3);
		
int count = 3;		
int dat = 0;
		
for (int i = 0; i < numbles.size(); i++) {
	while (true) {
		System.out.print("맞출 숫자를 입력하세요 : ");
		int n1 = input.nextInt();
		if (n1 == numbles.get(i) && count >= 1) {
			dat ++;
			if (dat == 3) {
				break;
			}
			else {
			System.out.println("맞았습니다. 다음 숫자를 입력하세요.");
			count = 3;
			break;
			}
		}
		else if ( count >= 0){
			count--;
			if (count >= 1) {
			System.out.println("틀렸습니다. 다시 입력하세요.. 남은 기회 = " + count + "번");
			}
			else {
				System.out.println("틀렸습니다.");
				break;
			}
		}	
	}
	if (dat == 3) {
		System.out.println("성공!");	
		break;
	}
	else if (count == 0) {
		System.out.println("실패! \n랜덤 순자는.." + num1+", "+num2+", "+num3+" 입니다.");
		break;
	}
	
}
==============실행 결과==============
//상황1) 랜덤 기회를 다 소진한 경우
랜덤 숫자를 생성 합니다.
맞출 숫자를 입력하세요 : 1
틀렸습니다. 다시 입력하세요.. 남은 기회 = 2번
맞출 숫자를 입력하세요 : 2
맞았습니다. 다음 숫자를 입력하세요.
맞출 숫자를 입력하세요 : 4
틀렸습니다. 다시 입력하세요.. 남은 기회 = 2번
맞출 숫자를 입력하세요 : 1
틀렸습니다. 다시 입력하세요.. 남은 기회 = 1번
맞출 숫자를 입력하세요 : 2
틀렸습니다.
실패! 
랜덤 순자는..2, 3, 3 입니다.
==============실행 결과==============
//상황2) 모든 숫자를 맞춘 경우
랜덤 숫자를 생성 합니다.
맞출 숫자를 입력하세요 : 1
틀렸습니다. 다시 입력하세요.. 남은 기회 = 2번
맞출 숫자를 입력하세요 : 2
맞았습니다. 다음 숫자를 입력하세요.
맞출 숫자를 입력하세요 : 3
맞았습니다. 다음 숫자를 입력하세요.
맞출 숫자를 입력하세요 : 1
성공!





